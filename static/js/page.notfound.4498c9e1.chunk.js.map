{"version":3,"sources":["organisms/notFound/index.js","../node_modules/react-intl/lib/components/message.js","pages/notFound/index.js"],"names":["NotFound","children","id","to","color","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","shallowEquals","shallowEquals_","defaultFormatMessage","descriptor","values","formatMessage","assign","DEFAULT_INTL_CONFIG","locale","createFormatters","FormattedMessage","nextProps","_a","this","props","otherProps","nextValues","nextOtherProps","React","Context","Consumer","intl","defaultMessage","invariantIntlContext","textComponent","Text","description","tagName","Component","nodes","Array","isArray","displayName","defaultProps","PageNotFound"],"mappings":"oGAAA,gEAmBeA,IAdE,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAUA,GACV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAkBC,GAAG,mBAAoB,IACzC,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,CAAMC,MAAM,aACV,kBAAC,IAAD,CAAkBF,GAAG,wB,mHCP3BG,EAAkC,SAAUC,EAAGC,GAC/C,IAAIC,EAAI,GACR,IAAK,IAAIC,KAAKH,EAAOI,OAAOC,UAAUC,eAAeC,KAAKP,EAAGG,IAAMF,EAAEO,QAAQL,GAAK,IAC9ED,EAAEC,GAAKH,EAAEG,IACb,GAAS,MAALH,GAAqD,oBAAjCI,OAAOK,sBACtB,KAAIC,EAAI,EAAb,IAAgBP,EAAIC,OAAOK,sBAAsBT,GAAIU,EAAIP,EAAEQ,OAAQD,IAC3DT,EAAEO,QAAQL,EAAEO,IAAM,GAAKN,OAAOC,UAAUO,qBAAqBL,KAAKP,EAAGG,EAAEO,MACvER,EAAEC,EAAEO,IAAMV,EAAEG,EAAEO,KAE1B,OAAOR,GAOLW,E,OAAgBC,GAA0BA,EAChD,SAASC,EAAqBC,EAAYC,GAItC,OAAOC,YAAcd,OAAOe,OAAOf,OAAOe,OAAO,GAAIC,KAAsB,CAAEC,OAAQ,OAASC,cAAoBN,EAAYC,G,IAE5HM,E,oLACoBC,GACZ,IAAAC,EAAKC,KAAKC,MAASV,EAAWQ,EAAXR,OAAeW,EAAa7B,EAAO0B,EAAI,CAAC,WACjDI,EAAeL,EAAvBP,OAAkCa,EAAiB/B,EAAOyB,EAAW,CAAC,WAC9E,OAASX,EAAcgB,EAAYZ,KAC9BJ,EAAce,EAAYE,K,+BAE1B,WACL,OAAQC,gBAAoBC,IAAQC,SAAU,MAAM,SAACC,GAC5C,EAAKP,MAAMQ,gBACZC,YAAqBF,GAFiC,MAI8BA,GAAQ,GAJtC,IAIlDhB,qBAJkD,MAIlCH,EAJkC,MAIZsB,cAAeC,OAJH,MAIUP,WAJV,IAKgC,EAAKJ,MAAvF/B,EALkD,EAKlDA,GAAI2C,EAL8C,EAK9CA,YAAaJ,EALiC,EAKjCA,eAAgBlB,EALiB,EAKjBA,OAAQtB,EALS,EAKTA,SALS,IAKC6C,QAASC,OALV,MAKsBH,EALtB,EAOtDI,EAAQxB,EADO,CAAEtB,KAAI2C,cAAaJ,kBACAlB,GAItC,OAHK0B,MAAMC,QAAQF,KACfA,EAAQ,CAACA,IAEW,oBAAb/C,EACAA,EAAQ,WAAR,cAAY+C,IAEnBD,EAGOV,gBAAA,MAAAA,EAAK,CAAeU,EAAW,MAA1B,mBAAmCC,KAE5CA,S,GA3BYX,aA+B/BR,EAAiBsB,YAAc,mBAC/BtB,EAAiBuB,aAAe,CAC5B7B,OAAQ,IAEGM,O,iCC/Df,6CAUewB,UANM,SAAApB,GAAK,OACxB,kBAAC,IAAaA,EACZ,kBAAC,IAAD,CAAkB/B,GAAG","file":"static/js/page.notfound.4498c9e1.chunk.js","sourcesContent":["import React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Box, Heading, Text} from 'grommet';\nimport Link from 'components/link';\n\nconst NotFound = ({children}) => (\n  <Box>\n    <Heading>{children}</Heading>\n    <Text>\n      <FormattedMessage id=\"notFound.title\" />{' '}\n      <Link to=\"/\">\n        <Text color=\"neutral-3\">\n          <FormattedMessage id=\"notFound.link\" />\n        </Text>\n      </Link>\n    </Text>\n  </Box>\n);\n\nexport default NotFound;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { formatMessage } from '../formatters/message';\nimport { invariantIntlContext, DEFAULT_INTL_CONFIG, createFormatters, } from '../utils';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nconst shallowEquals = shallowEquals_.default || shallowEquals_;\nfunction defaultFormatMessage(descriptor, values) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error('[React Intl] Could not find required `intl` object. <IntlProvider> needs to exist in the component ancestry. Using default message as fallback.');\n    }\n    return formatMessage(Object.assign(Object.assign({}, DEFAULT_INTL_CONFIG), { locale: 'en' }), createFormatters(), descriptor, values);\n}\nclass FormattedMessage extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        const _a = this.props, { values } = _a, otherProps = __rest(_a, [\"values\"]);\n        const { values: nextValues } = nextProps, nextOtherProps = __rest(nextProps, [\"values\"]);\n        return (!shallowEquals(nextValues, values) ||\n            !shallowEquals(otherProps, nextOtherProps));\n    }\n    render() {\n        return (React.createElement(Context.Consumer, null, (intl) => {\n            if (!this.props.defaultMessage) {\n                invariantIntlContext(intl);\n            }\n            const { formatMessage = defaultFormatMessage, textComponent: Text = React.Fragment, } = intl || {};\n            const { id, description, defaultMessage, values, children, tagName: Component = Text, } = this.props;\n            const descriptor = { id, description, defaultMessage };\n            let nodes = formatMessage(descriptor, values);\n            if (!Array.isArray(nodes)) {\n                nodes = [nodes];\n            }\n            if (typeof children === 'function') {\n                return children(...nodes);\n            }\n            if (Component) {\n                // Needs to use `createElement()` instead of JSX, otherwise React will\n                // warn about a missing `key` prop with rich-text message formatting.\n                return React.createElement(Component, null, ...nodes);\n            }\n            return nodes;\n        }));\n    }\n}\nFormattedMessage.displayName = 'FormattedMessage';\nFormattedMessage.defaultProps = {\n    values: {},\n};\nexport default FormattedMessage;\n","import React from 'react';\nimport NotFound from 'organisms/notFound';\nimport {FormattedMessage} from 'react-intl';\n\nconst PageNotFound = props => (\n  <NotFound {...props}>\n    <FormattedMessage id=\"pages.notFound\" />\n  </NotFound>\n);\n\nexport default PageNotFound;\n"],"sourceRoot":""}