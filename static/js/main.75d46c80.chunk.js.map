{"version":3,"sources":["hooks/useContextSelector/index.js","providers/categories/actions.js","providers/productBuckets/getResourceInitialState.js","providers/productBuckets/context.js","providers/productBuckets/index.js","providers/utilities/actionTypes.js","providers/utilities/getResourceInitialState.js","providers/configuration/context.js","providers/configuration/index.js","components/logo/index.js","organisms/header/index.js","organisms/footer/index.js","pages/index.js","app.js","serviceWorker.js","index.js","providers/utilities/actions.js","providers/localization/el.js","providers/localization/index.js","hooks/useReducer/index.js","providers/utilities/reducer.js","providers/utilities/getInitialState.js","providers/useExtraArgument.js","providers/theme/theme.js","providers/theme/globalStyle.js","providers/theme/index.js","providers/products/getResourceInitialState.js","providers/products/context.js","providers/products/index.js","helpers/request/toCamelCase.js","helpers/request/index.js","providers/api/getDispatch.js","providers/api/getMockDispatch.js","providers/api/context.js","providers/api/index.js","providers/notifications/context.js","providers/notifications/notification.js","providers/notifications/index.js","providers/notifications/getDispatch.js","components/link/index.js","providers/categories/getResourceInitialState.js","providers/categories/context.js","providers/categories/index.js","providers/productBuckets/helpers.js"],"names":["Context","select","identity","prevRef","useRef","useContextSelector","state","selected","isEqual","current","transform","data","sort","a","b","position","fetch","dispatch","api","notification","actions","getCategories","then","catch","error","server","fetchCategory","id","getCategory","getResourceInitialState","ids","DispatchContext","createContext","reducer","action","updatedState","defaultReducer","type","Error","initialState","getInitialState","useBucketsSelector","useBucketParamsSelector","params","byId","useBucketSelector","getBucketId","useBucketsDispatch","ProductBucket","children","extraArgument","useExtraArgument","productsDispatch","useProductsDispatch","useReducer","Provider","value","startFetchResource","doneFetchResource","failFetchResource","startFetch","doneFetch","failFetch","loaded","loading","exists","configuration","basepath","process","apiUrl","mockApi","useConfiguration","Configuration","Logo","props","to","Heading","level","margin","Header","isSmall","useScreenSize","background","justify","pad","color","Footer","intl","useIntl","Box","gap","Anchor","icon","Favorite","label","target","href","Info","Categories","lazy","Products","Product","NotFound","Page","height","as","flex","fallback","component","align","data-testid","path","default","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","actionTypes","payload","formatMessage","useNativeIntl","values","Localization","locale","messages","el","reactDispatch","stateRef","useCallback","param","getDefaultResourceInitialState","updateResource","Set","map","toString","reduce","h","resource","status","useApi","useNotification","global","colors","brand","focus","font","family","GlobalStyle","createGlobalStyle","size","useContext","ResponsiveContext","useMemo","isMedium","isLarge","useTheme","ThemeContext","Theme","Grommet","theme","style","categoryId","title","slugPath","imageUrl","price","excerpt","description","useProductsSelector","useProductSelector","toCamelCase","Array","isArray","Object","keys","key","camelCase","getParams","filter","k","undefined","encodeURIComponent","join","method","headers","options","controller","AbortController","search","link","request","signal","statusText","name","response","json","e","ok","abort","getNumber","isNaN","makeResponse","log","Promise","r","setTimeout","n","Api","getProductsByCategory","getProduct","page","limit","order","priceMin","priceMax","min_price","max_price","getDispatch","Container","styled","Notification","animation","left","vertical","right","Text","Notifications","useState","setState","timeout","clear","clearTimeout","make","info","warning","Link","className","routerTo","slug","productsCount","useCategoriesSelector","useCategorySelector","useCategoryDispatch","useEffect"],"mappings":"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","file":"static/js/main.75d46c80.chunk.js","sourcesContent":["import {useRef} from 'react';\nimport identity from 'lodash/identity';\nimport isEqual from 'lodash/isEqual';\nimport {useContextSelector} from 'use-context-selector';\n\nexport default (Context, select = identity) => {\n  const prevRef = useRef();\n  return useContextSelector(Context, state => {\n    const selected = select(state);\n    if (!isEqual(prevRef.current, selected)) prevRef.current = selected;\n    return prevRef.current;\n  });\n};\n","import * as actions from 'providers/utilities/actions';\n\nconst transform = data => data.sort((a, b) => a.position - b.position);\n\nexport const fetch = () => (state, dispatch, {api, notification}) => {\n  dispatch(actions.startFetch());\n\n  return api\n    .getCategories({transform})\n    .then(({data}) => {\n      dispatch(actions.doneFetch(data));\n    })\n    .catch(error => {\n      dispatch(actions.failFetch());\n      notification.server(error);\n    });\n};\n\nexport const fetchCategory = id => (state, dispatch, {api, notification}) => {\n  dispatch(actions.startFetchResource(id));\n\n  return api\n    .getCategory(id)\n    .then(({data}) => {\n      dispatch(actions.doneFetchResource(id, data));\n    })\n    .catch(error => {\n      dispatch(actions.failFetchResource(id, error));\n      notification.server(error);\n    });\n};\n","import getResourceInitialState from 'providers/utilities/getResourceInitialState';\n\nexport default id => ({\n  ...getResourceInitialState(id),\n  ids: []\n});\n","import {createContext} from 'use-context-selector';\n\nexport const DispatchContext = createContext();\n\nexport default createContext();\n","import React from 'react';\nimport identity from 'lodash/identity';\nimport useReducer from 'hooks/useReducer';\nimport useContextSelector from 'hooks/useContextSelector';\nimport defaultReducer from 'providers/utilities/reducer';\nimport getInitialState from 'providers/utilities/getInitialState';\nimport {useProductsDispatch} from 'providers/products';\nimport useExtraArgument from '../useExtraArgument';\nimport getResourceInitialState from './getResourceInitialState';\nimport Context, {DispatchContext} from './context';\nimport {getBucketId} from './helpers';\n\nconst reducer = (state, action) => {\n  const updatedState = defaultReducer(state, action, {getResourceInitialState});\n  if (updatedState) return updatedState;\n\n  switch (action.type) {\n    default:\n      throw new Error(`unknown action '${action.type}'`);\n  }\n};\n\nconst initialState = getInitialState();\n\nconst ProductBucket = ({children}) => {\n  const extraArgument = useExtraArgument();\n  const productsDispatch = useProductsDispatch();\n\n  const [state, dispatch] = useReducer(reducer, initialState, {...extraArgument, productsDispatch});\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <Context.Provider value={state}>{children}</Context.Provider>\n    </DispatchContext.Provider>\n  );\n};\n\nexport const useBucketsSelector = select => useContextSelector(Context, select);\n\nexport const useBucketSelector = (id, select = identity) =>\n  useBucketsSelector(({byId}) => select(byId[id] || getResourceInitialState(id)));\n\nexport const useBucketParamsSelector = (params, select) => useBucketSelector(getBucketId(params), select);\n\nexport const useBucketsDispatch = () => useContextSelector(DispatchContext);\n\nexport default ProductBucket;\n","export const startFetchResource = 'startFetchResource';\nexport const doneFetchResource = 'doneFetchResource';\nexport const failFetchResource = 'failFetchResource';\nexport const startFetch = 'startFetch';\nexport const doneFetch = 'doneFetch';\nexport const failFetch = 'failFetch';\n","export default (id = null) => ({\n  id,\n  loaded: false,\n  loading: false,\n  exists: true\n});\n","import {createContext} from 'use-context-selector';\n\nexport default createContext();\n","import React from 'react';\nimport identity from 'lodash/identity';\nimport useContextSelector from 'hooks/useContextSelector';\nimport Context from './context';\n\nconst configuration = {\n  basepath: process.env.PUBLIC_URL,\n  apiUrl: 'https://bp-interview.herokuapp.com',\n  mockApi: process.env.NODE_ENV !== 'production'\n};\n\nconst Configuration = ({children}) => <Context.Provider value={configuration}>{children}</Context.Provider>;\n\nexport const useConfiguration = (select = identity) => useContextSelector(Context, select);\n\nexport default Configuration;\n","import React from 'react';\nimport {Heading} from 'grommet';\nimport Link from 'components/link';\n\nconst Logo = props => (\n  <Link to=\"/\">\n    <Heading level=\"2\" margin=\"none\" {...props}>\n      I Want It\n    </Heading>\n  </Link>\n);\n\nexport default Logo;\n","import React from 'react';\nimport {Header as GHeader} from 'grommet';\nimport {useScreenSize} from 'providers/theme';\nimport Logo from 'components/logo';\n\nconst Header = () => {\n  const {isSmall} = useScreenSize();\n\n  return (\n    <GHeader background=\"dark-1\" justify=\"center\" pad={isSmall ? 'large' : 'medium'}>\n      <Logo color=\"white\" />\n    </GHeader>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport {useIntl} from 'providers/localization';\nimport {Footer as GFooter, Anchor, Box} from 'grommet';\nimport {Favorite, Info} from 'grommet-icons';\nimport Logo from 'components/logo';\n\nconst Footer = () => {\n  const intl = useIntl();\n\n  return (\n    <GFooter background=\"dark-1\" pad=\"large\">\n      <Logo color=\"white\" />\n      <Box gap=\"small\">\n        <Anchor\n          icon={<Favorite color=\"neutral-4\" />}\n          color=\"white\"\n          label={intl('footer.madeWithLove')}\n          target=\"_blank\"\n          href=\"https://github.com/apostolidhs/iwantit\"\n        />\n        <Anchor\n          icon={<Info color=\"neutral-3\" />}\n          color=\"white\"\n          label={intl('footer.whatIsThis')}\n          target=\"_blank\"\n          href={`${process.env.PUBLIC_URL}/report.pdf`}\n        />\n      </Box>\n    </GFooter>\n  );\n};\n\nexport default Footer;\n","import React, {Suspense, lazy} from 'react';\nimport {Router} from '@reach/router';\nimport {Main, Box} from 'grommet';\nimport Header from 'organisms/header';\nimport Footer from 'organisms/footer';\nimport {useConfiguration} from 'providers/configuration';\n\nconst Categories = lazy(() => import(/* webpackChunkName: 'page.categories' */ './categories'));\nconst Products = lazy(() => import(/* webpackChunkName: 'page.products' */ './products'));\nconst Product = lazy(() => import(/* webpackChunkName: 'page.product' */ './product'));\nconst NotFound = lazy(() => import(/* webpackChunkName: 'page.notfound' */ './notFound'));\n\nconst Page = () => {\n  const {basepath} = useConfiguration();\n\n  return (\n    <Box height=\"100%\">\n      <Header />\n      <Box as=\"main\" background=\"light-1\" flex=\"grow\">\n        <Suspense fallback={null}>\n          <Router component={Box} align=\"center\" flex=\"grow\" pad=\"medium\" basepath={basepath} data-testid=\"router\">\n            <Categories path=\"/\" />\n            <Products path=\"/category/:id/*\" />\n            <Product path=\"/product/:id/*\" />\n\n            <NotFound default />\n          </Router>\n        </Suspense>\n      </Box>\n      <Footer />\n    </Box>\n  );\n};\n\nexport default Page;\n","import React from 'react';\nimport ConfigurationProvider from 'providers/configuration';\nimport ThemeProvider from 'providers/theme';\nimport LocalizationProvider from 'providers/localization';\nimport NotificationsProvider from 'providers/notifications';\nimport ApiProvider from 'providers/api';\nimport CategoriesProvider from 'providers/categories';\nimport ProductsProvider from 'providers/products';\nimport ProductBuckets from 'providers/productBuckets';\nimport Pages from './pages';\n\nconst App = () => (\n  <ConfigurationProvider>\n    <ThemeProvider>\n      <LocalizationProvider>\n        <NotificationsProvider>\n          <ApiProvider>\n            <CategoriesProvider>\n              <ProductsProvider>\n                <ProductBuckets>\n                  <Pages />\n                </ProductBuckets>\n              </ProductsProvider>\n            </CategoriesProvider>\n          </ApiProvider>\n        </NotificationsProvider>\n      </LocalizationProvider>\n    </ThemeProvider>\n  </ConfigurationProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'}\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import * as actionTypes from './actionTypes';\n\nexport const startFetchResource = id => ({type: actionTypes.startFetchResource, id});\n\nexport const doneFetchResource = (id, payload) => ({type: actionTypes.doneFetchResource, id, payload});\n\nexport const failFetchResource = (id, error) => ({type: actionTypes.failFetchResource, id, error});\n\nexport const startFetch = () => ({type: actionTypes.startFetch});\n\nexport const doneFetch = payload => ({type: actionTypes.doneFetch, payload});\n\nexport const failFetch = () => ({type: actionTypes.failFetch});\n","export default {\n  'pages.notFound': 'Η σελίδα δεν υπάρχει',\n\n  'pages.categories.noResults': 'Προσωρινά δεν έχουμε περιεχόμενο',\n  'pages.categories.notFound': 'Δεν βρέθηκε το προϊόν',\n\n  'pages.products.noResults': 'Δεν βρέθηκαν προϊόντα',\n  'pages.products.noResults.details': 'Δες όλα τα προϊόντα της',\n  'pages.products.noResults.details.link': 'κατηγορίας {title}',\n  'pages.products.notFound': 'Δεν βρέθηκε η κατηγορία',\n  'pages.products.quantity': '{productsCount} προϊόντα',\n\n  'footer.madeWithLove': 'Made with love',\n  'footer.whatIsThis': 'What is this',\n\n  'notFound.title': 'Δες όλες τις',\n  'notFound.link': 'κατηγορίες προϊόντων',\n\n  'breadcrumb.landing': 'Αρχική',\n\n  'activeFilter.price.both': '{minValue}  έως {maxValue}',\n  'activeFilter.price.min': 'από {minValue}',\n  'activeFilter.price.max': 'εώς {maxValue}',\n\n  'filters.label': 'φίλτρα',\n  'filters.overlay.submit': 'Προιόντα',\n  'filters.overlay.cancel': 'Ακύρωση',\n  'filters.price.label': 'Τιμή',\n\n  'sorting.desc.label': 'Φθηνότερα',\n  'sorting.desc.title': 'Φθινότερα πρώτα',\n  'sorting.asc.label': 'Ακριβότερα',\n  'sorting.asc.title': 'Ακριβότερα πρώτα',\n\n  'pagination.prev': 'Προηγούμενο',\n  'pagination.next': 'Επόμενο',\n  'pagination.goto': 'Σελίδα {page}',\n\n  'app.close': 'Κλείσιμο',\n\n  'error.connection': 'Η σύνδεση δεν είναι καλή',\n  'error.general': 'Ουπς, συνέβει κάποιο σφάλμα'\n};\n","import React from 'react';\nimport {IntlProvider, useIntl as useNativeIntl} from 'react-intl';\nimport el from './el';\n\nconst Localization = ({children}) => (\n  <IntlProvider locale=\"el\" messages={el}>\n    {children}\n  </IntlProvider>\n);\n\nexport const useIntl = () => {\n  const {formatMessage} = useNativeIntl();\n  return (id, values) => formatMessage({id}, values);\n};\n\nexport default Localization;\n","import {useReducer, useCallback, useRef} from 'react';\n\nexport default (reducer, initialState, extraArgument) => {\n  const [state, reactDispatch] = useReducer(reducer, initialState);\n  const stateRef = useRef();\n  stateRef.current = state;\n\n  const dispatch = useCallback(\n    param =>\n      typeof param === 'function' ? param(stateRef.current, reactDispatch, extraArgument) : reactDispatch(param),\n    []\n  );\n\n  return [state, dispatch];\n};\n","import * as actionTypes from './actionTypes';\nimport getDefaultResourceInitialState from './getResourceInitialState';\n\nexport default (state, action, {getResourceInitialState = getDefaultResourceInitialState} = {}) => {\n  const updateResource = (state, id, dispatch) => ({\n    ...state,\n    ids: [...new Set([...state.ids, id])],\n    byId: {...state.byId, [id]: dispatch({...getResourceInitialState(id), ...state.byId[id]})}\n  });\n\n  const doneFetch = (state, payload) => {\n    const ids = payload.map(({id}) => id.toString());\n    const byId = payload.reduce(\n      (h, resource) => ({...h, [resource.id]: {...getResourceInitialState(resource.id), ...resource}}),\n      state.byId\n    );\n\n    return {...state, loaded: true, loading: false, ids: [...new Set([...state.ids, ...ids])], byId};\n  };\n\n  switch (action.type) {\n    case actionTypes.startFetchResource:\n      return updateResource(state, action.id, resource => ({...resource, loading: true}));\n\n    case actionTypes.doneFetchResource:\n      return updateResource(state, action.id, resource => ({\n        ...resource,\n        loaded: true,\n        loading: false,\n        ...action.payload\n      }));\n\n    case actionTypes.failFetchResource:\n      return updateResource(state, action.id, resource => ({\n        ...resource,\n        exists: action.error.status !== 404,\n        loading: false\n      }));\n\n    case actionTypes.startFetch:\n      return {...state, loading: true};\n\n    case actionTypes.doneFetch:\n      return doneFetch(state, action.payload);\n\n    case actionTypes.failFetch:\n      return {...state, loading: false};\n\n    default:\n      return null;\n  }\n};\n","export default () => ({\n  loaded: false,\n  loading: false,\n  ids: [],\n  byId: {}\n});\n","import {useApi} from 'providers/api';\nimport {useNotification} from 'providers/notifications';\n\nexport default () => {\n  const api = useApi();\n  const notification = useNotification();\n\n  return {api, notification};\n};\n","export default {\n  global: {\n    colors: {brand: '#1a73e8', focus: '#F8F8F8'},\n    font: {\n      family: 'Arial, Helvetica, sans-serif'\n    }\n  }\n};\n","import {createGlobalStyle} from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body, html, #root {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n  }\n\n  :focus {\n    outline: 0;\n  }\n  a {\n    text-decoration: none;\n    text-decoration-color: initial;\n    color: initial;\n  }\n  button:focus {\n    outline:0 !important;\n  }\n`;\n\nexport default GlobalStyle;\n","import React, {useContext, useMemo} from 'react';\nimport {Grommet, ResponsiveContext, ThemeContext} from 'grommet';\nimport theme from './theme';\nimport GlobalStyle from './globalStyle';\n\nconst Theme = ({children}) => (\n  <Grommet theme={theme} style={{height: '100%'}}>\n    <GlobalStyle />\n    {children}\n  </Grommet>\n);\n\nexport const useSize = () => useContext(ResponsiveContext);\n\nexport const useScreenSize = () => {\n  const size = useSize();\n\n  return useMemo(\n    () => ({\n      size,\n      isSmall: size === 'small',\n      isMedium: size === 'medium',\n      isLarge: size === 'large'\n    }),\n    [size]\n  );\n};\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport default Theme;\n","import getResourceInitialState from 'providers/utilities/getResourceInitialState';\n\nexport default id => ({\n  ...getResourceInitialState(id),\n  categoryId: null,\n  title: '',\n  slugPath: '',\n  imageUrl: '',\n  price: 0,\n  excerpt: '',\n  description: ''\n});\n","import {createContext} from 'use-context-selector';\n\nexport const DispatchContext = createContext();\n\nexport default createContext();\n","import React from 'react';\nimport identity from 'lodash/identity';\nimport useReducer from 'hooks/useReducer';\nimport useContextSelector from 'hooks/useContextSelector';\nimport defaultReducer from 'providers/utilities/reducer';\nimport getInitialState from 'providers/utilities/getInitialState';\nimport useExtraArgument from '../useExtraArgument';\nimport getResourceInitialState from './getResourceInitialState';\nimport Context, {DispatchContext} from './context';\n\nconst reducer = (state, action) => {\n  const updatedState = defaultReducer(state, action, {getResourceInitialState});\n  if (updatedState) return updatedState;\n\n  switch (action.type) {\n    default:\n      throw new Error(`unknown action '${action.type}'`);\n  }\n};\n\nconst initialState = getInitialState();\n\nconst Products = ({children}) => {\n  const extraArgument = useExtraArgument();\n  const [state, dispatch] = useReducer(reducer, initialState, extraArgument);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <Context.Provider value={state}>{children}</Context.Provider>\n    </DispatchContext.Provider>\n  );\n};\n\nexport const useProductsSelector = select => useContextSelector(Context, select);\n\nexport const useProductSelector = (id, select = identity) =>\n  useProductsSelector(({byId}) => select(byId[id] || getResourceInitialState(id)));\n\nexport const useProductsDispatch = () => useContextSelector(DispatchContext);\n\nexport default Products;\n","import camelCase from 'lodash/camelCase';\n\nconst toCamelCase = data => {\n  if (Array.isArray(data)) return data.map(value => toCamelCase(value));\n  if (data && typeof data === 'object')\n    return Object.keys(data).reduce((h, key) => ({...h, [camelCase(key)]: toCamelCase(data[key])}), {});\n\n  return data;\n};\n\nexport default toCamelCase;\n","import identity from 'lodash/identity';\nimport toCamelCase from './toCamelCase';\n\nconst getParams = params =>\n  Object.keys(params)\n    .filter(k => params[k] !== undefined)\n    .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n    .join('&');\n\nexport default (href, {params, transform = identity, method = 'GET', headers, ...options} = {}) => {\n  const controller = new AbortController();\n\n  const search = params && getParams(params);\n  const link = search ? `${href}?${search}` : href;\n  const request = fetch(link, {\n    signal: controller.signal,\n    method,\n    headers: {'Content-Type': 'application/json', ...headers},\n    ...options\n  })\n    .catch(error => {\n      error.status = -1;\n      error.statusText = error.name;\n      return error;\n    })\n    .then(response =>\n      response.status === -1\n        ? {response}\n        : response\n            .json()\n            .catch(e => null)\n            .then(data => ({data, response}))\n    )\n    .then(({data, response}) => {\n      const {status, statusText} = response;\n      if (response.ok) return {data: transform(toCamelCase(data)), status, statusText};\n      throw {data, status, statusText};\n    });\n\n  request.abort = () => {\n    controller.abort();\n  };\n\n  return request;\n};\n","import request from 'helpers/request';\n\nconst getNumber = value => (isNaN(value) ? undefined : value);\n\nexport default apiUrl => ({\n  getCategories: props => request(`${apiUrl}/categories`, props),\n  getCategory: (id, props) => request(`${apiUrl}/categories/${id}`, props),\n  getProductsByCategory: (id, {page, limit, sort, order, priceMin, priceMax}, props) =>\n    request(`${apiUrl}/categories/${id}/products`, {\n      params: {\n        page,\n        limit,\n        sort,\n        order: order ? 'asc' : 'desc',\n        min_price: getNumber(priceMin),\n        max_price: getNumber(priceMax),\n        limit: 15\n      },\n      ...props\n    }),\n  getProduct: (id, props) => request(`${apiUrl}/products/${id}`, props)\n});\n","import toCamelCase from 'helpers/request/toCamelCase';\n\nconst makeResponse = response => {\n  console.log('request');\n  return new Promise(r => {\n    setTimeout(() => r({data: toCamelCase(response.default)}), 1);\n  });\n};\n\nexport default () => ({\n  getCategories: () => import('fixtures/categories').then(makeResponse),\n  getCategory: () => import('fixtures/category').then(makeResponse),\n  getProductsByCategory: () => import('fixtures/products').then(makeResponse),\n  getProduct: () => import('fixtures/product').then(makeResponse)\n});\n","import {createContext} from 'use-context-selector';\n\nexport default createContext();\n","import React, {useMemo} from 'react';\nimport useContextSelector from 'hooks/useContextSelector';\nimport {useConfiguration} from 'providers/configuration';\nimport getDispatch from './getDispatch';\nimport getMockDispatch from './getMockDispatch';\nimport Context from './context';\n\nconst Api = ({children}) => {\n  const {apiUrl, mockApi} = useConfiguration();\n  const dispatch = useMemo(() => (mockApi ? getMockDispatch() : getDispatch(apiUrl)), []);\n\n  return <Context.Provider value={dispatch}>{children}</Context.Provider>;\n};\n\nexport const useApi = select => useContextSelector(Context, select || (n => n));\n\nexport default Api;\n","import {createContext} from 'use-context-selector';\n\nexport default createContext();\n","import React from 'react';\nimport styled from 'styled-components';\nimport {Box, Text} from 'grommet';\n\nconst Container = styled(Box)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 10;\n`;\n\nconst Notification = ({type, message}) => (\n  <Container animation=\"fadeIn\">\n    <Box\n      background={type === 'info' ? 'neutral-3' : 'status-warning'}\n      pad={{left: 'medium', vertical: 'small', right: 'medium'}}>\n      <Text color=\"white\" size=\"large\">\n        {message}\n      </Text>\n    </Box>\n  </Container>\n);\n\nexport default Notification;\n","import React, {Fragment, useState, useMemo} from 'react';\nimport useContextSelector from 'hooks/useContextSelector';\nimport {useIntl} from 'providers/localization';\nimport getDispatch from './getDispatch';\nimport Context from './context';\nimport Notification from './notification';\n\nconst Notifications = ({children}) => {\n  const [state, setState] = useState();\n  const intl = useIntl();\n\n  const dispatch = useMemo(() => getDispatch(setState, {intl}), []);\n\n  return (\n    <Fragment>\n      {state && <Notification {...state} />}\n      <Context.Provider value={dispatch}>{children}</Context.Provider>\n    </Fragment>\n  );\n};\n\nexport const useNotification = () => useContextSelector(Context);\n\nexport default Notifications;\n","export default (dispatch, {intl}) => {\n  let timeout = null;\n\n  const clear = () => {\n    clearTimeout(timeout);\n    dispatch(null);\n  };\n\n  const make = type => message => {\n    clear();\n    dispatch({type, message});\n    timeout = setTimeout(clear, 5000);\n  };\n\n  const info = make('info');\n\n  return {\n    info,\n    warning: make('warning'),\n    server: ({status}) => {\n      if (status === 404) return;\n      const message = intl(status === -1 ? 'error.connection' : 'error.general');\n      info(message);\n    }\n  };\n};\n","import React from 'react';\nimport {Link as RouterLink} from '@reach/router';\nimport {useConfiguration} from 'providers/configuration';\n\nconst Link = ({to, children, className, title}) => {\n  const {basepath} = useConfiguration();\n  const routerTo = to[0] === '/' ? `${basepath}${to}` : to;\n\n  return (\n    <RouterLink className={className} title={title} to={routerTo}>\n      {children}\n    </RouterLink>\n  );\n};\n\nexport default Link;\n","import getResourceInitialState from 'providers/utilities/getResourceInitialState';\n\nexport default id => ({\n  ...getResourceInitialState(id),\n  title: '',\n  slug: '',\n  position: 0,\n  imageUrl: '',\n  productsCount: 0,\n  priceMin: 0,\n  priceMax: 0\n});\n","import {createContext} from 'use-context-selector';\n\nexport const DispatchContext = createContext();\n\nexport default createContext();\n","import React, {useEffect} from 'react';\nimport identity from 'lodash/identity';\nimport useReducer from 'hooks/useReducer';\nimport useContextSelector from 'hooks/useContextSelector';\nimport defaultReducer from 'providers/utilities/reducer';\nimport getInitialState from 'providers/utilities/getInitialState';\nimport useExtraArgument from '../useExtraArgument';\nimport * as actions from './actions';\nimport getResourceInitialState from './getResourceInitialState';\nimport Context, {DispatchContext} from './context';\n\nconst reducer = (state, action) => {\n  const updatedState = defaultReducer(state, action, {getResourceInitialState});\n  if (updatedState) return updatedState;\n\n  switch (action.type) {\n    default:\n      throw new Error(`unknown action '${action.type}'`);\n  }\n};\n\nconst initialState = getInitialState();\n\nconst Categories = ({children}) => {\n  const extraArgument = useExtraArgument();\n  const [state, dispatch] = useReducer(reducer, initialState, extraArgument);\n\n  useEffect(() => {\n    actions.fetch()(state, dispatch, extraArgument);\n  }, []);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <Context.Provider value={state}>{children}</Context.Provider>\n    </DispatchContext.Provider>\n  );\n};\n\nexport const useCategoriesSelector = select => useContextSelector(Context, select);\n\nexport const useCategorySelector = (id, select = identity) =>\n  useCategoriesSelector(({byId}) => select(byId[id] || getResourceInitialState(id)));\n\nexport const useCategoryDispatch = () => useContextSelector(DispatchContext);\n\nexport default Categories;\n","export const getBucketId = ({categoryId, page, sort, order, priceMax, priceMin}) =>\n  [categoryId, page, sort, order, priceMax, priceMin].join('-');\n"],"sourceRoot":""}