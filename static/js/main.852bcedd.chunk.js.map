{"version":3,"sources":["hooks/useContextSelector/index.js","providers/categories/actions.js","providers/utilities/actionTypes.js","providers/utilities/getResourceInitialState.js","providers/configuration/context.js","providers/configuration/index.js","components/logo/index.js","organisms/header/index.js","organisms/footer/index.js","pages/index.js","app.js","serviceWorker.js","index.js","providers/utilities/actions.js","providers/localization/el.js","providers/localization/index.js","hooks/useReducer/index.js","providers/utilities/reducer.js","providers/utilities/getInitialState.js","providers/useExtraArgument.js","providers/theme/theme.js","providers/theme/globalStyle.js","providers/theme/index.js","providers/products/getResourceInitialState.js","providers/products/context.js","providers/products/index.js","helpers/request/toCamelCase.js","helpers/request/index.js","providers/api/getDispatch.js","providers/api/getMockDispatch.js","providers/api/context.js","providers/api/index.js","providers/notifications/context.js","providers/notifications/notification.js","providers/notifications/index.js","providers/notifications/getDispatch.js","components/link/index.js","providers/categories/getResourceInitialState.js","providers/categories/context.js","providers/categories/index.js","providers/productBuckets/helpers.js","providers/productBuckets/getResourceInitialState.js","providers/productBuckets/context.js","providers/productBuckets/index.js"],"names":["Context","select","identity","prevRef","useRef","useContextSelector","state","selected","isEqual","current","transform","data","sort","a","b","position","fetch","dispatch","api","notification","actions","getCategories","then","catch","error","server","fetchCategory","id","getCategory","startFetchResource","doneFetchResource","failFetchResource","startFetch","doneFetch","failFetch","loaded","loading","exists","createContext","configuration","basepath","process","apiUrl","mockApi","useConfiguration","Configuration","children","Provider","value","Logo","props","to","Heading","level","margin","Header","isSmall","useScreenSize","background","justify","pad","color","Footer","intl","useIntl","Box","gap","Anchor","icon","Favorite","label","target","href","Info","Categories","lazy","Products","Product","NotFound","Page","height","as","flex","fallback","component","align","data-testid","path","default","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","type","actionTypes","payload","formatMessage","useNativeIntl","values","Localization","locale","messages","el","reducer","initialState","extraArgument","useReducer","reactDispatch","stateRef","useCallback","param","action","getResourceInitialState","getDefaultResourceInitialState","updateResource","ids","Set","byId","map","toString","reduce","h","resource","status","useApi","useNotification","global","colors","brand","focus","font","family","GlobalStyle","createGlobalStyle","size","useContext","ResponsiveContext","useMemo","isMedium","isLarge","useTheme","ThemeContext","Theme","Grommet","theme","style","categoryId","title","slugPath","imageUrl","price","excerpt","description","DispatchContext","updatedState","defaultReducer","Error","getInitialState","useProductsSelector","useProductSelector","useProductsDispatch","useExtraArgument","toCamelCase","Array","isArray","Object","keys","key","camelCase","getParams","params","filter","k","undefined","encodeURIComponent","join","method","headers","options","controller","AbortController","search","link","request","signal","statusText","name","response","json","e","ok","abort","getNumber","isNaN","makeResponse","log","Promise","r","setTimeout","n","Api","getProductsByCategory","getProduct","page","order","priceMin","priceMax","limit","min_price","max_price","getDispatch","Container","styled","Notification","animation","left","vertical","right","Text","Notifications","useState","setState","timeout","clear","clearTimeout","make","info","warning","Link","className","routerTo","slug","productsCount","useCategoriesSelector","useCategorySelector","useCategoryDispatch","useEffect","getBucketId","useBucketsSelector","useBucketParamsSelector","useBucketSelector","useBucketsDispatch","ProductBucket","productsDispatch"],"mappings":"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","file":"static/js/main.852bcedd.chunk.js","sourcesContent":["import {useRef} from 'react';\nimport identity from 'lodash/identity';\nimport isEqual from 'lodash/isEqual';\nimport {useContextSelector} from 'use-context-selector';\n\nexport default (Context, select = identity) => {\n  const prevRef = useRef();\n  return useContextSelector(Context, state => {\n    const selected = select(state);\n    if (!isEqual(prevRef.current, selected)) prevRef.current = selected;\n    return prevRef.current;\n  });\n};\n","import * as actions from 'providers/utilities/actions';\n\nconst transform = data => data.sort((a, b) => a.position - b.position);\n\nexport const fetch = () => (state, dispatch, {api, notification}) => {\n  dispatch(actions.startFetch());\n\n  return api\n    .getCategories({transform})\n    .then(({data}) => {\n      dispatch(actions.doneFetch(data));\n    })\n    .catch(error => {\n      dispatch(actions.failFetch());\n      notification.server(error);\n    });\n};\n\nexport const fetchCategory = id => (state, dispatch, {api, notification}) => {\n  dispatch(actions.startFetchResource(id));\n\n  return api\n    .getCategory(id)\n    .then(({data}) => {\n      dispatch(actions.doneFetchResource(id, data));\n    })\n    .catch(error => {\n      dispatch(actions.failFetchResource(id, error));\n      notification.server(error);\n    });\n};\n","export const startFetchResource = 'startFetchResource';\nexport const doneFetchResource = 'doneFetchResource';\nexport const failFetchResource = 'failFetchResource';\nexport const startFetch = 'startFetch';\nexport const doneFetch = 'doneFetch';\nexport const failFetch = 'failFetch';\n","export default (id = null) => ({\n  id,\n  loaded: false,\n  loading: false,\n  exists: true\n});\n","import {createContext} from 'use-context-selector';\n\nexport default createContext();\n","import React from 'react';\nimport identity from 'lodash/identity';\nimport useContextSelector from 'hooks/useContextSelector';\nimport Context from './context';\n\nconst configuration = {\n  basepath: process.env.PUBLIC_URL,\n  apiUrl: 'https://bp-interview.herokuapp.com',\n  mockApi: process.env.NODE_ENV !== 'production'\n};\n\nconst Configuration = ({children}) => <Context.Provider value={configuration}>{children}</Context.Provider>;\n\nexport const useConfiguration = (select = identity) => useContextSelector(Context, select);\n\nexport default Configuration;\n","import React from 'react';\nimport {Heading} from 'grommet';\nimport Link from 'components/link';\n\nconst Logo = props => (\n  <Link to=\"/\">\n    <Heading level=\"2\" margin=\"none\" {...props}>\n      I Want It\n    </Heading>\n  </Link>\n);\n\nexport default Logo;\n","import React from 'react';\nimport {Header as GHeader} from 'grommet';\nimport {useScreenSize} from 'providers/theme';\nimport Logo from 'components/logo';\n\nconst Header = () => {\n  const {isSmall} = useScreenSize();\n\n  return (\n    <GHeader background=\"dark-1\" justify=\"center\" pad={isSmall ? 'large' : 'medium'}>\n      <Logo color=\"white\" />\n    </GHeader>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport {useIntl} from 'providers/localization';\nimport {Footer as GFooter, Anchor, Box} from 'grommet';\nimport {Favorite, Info} from 'grommet-icons';\nimport Logo from 'components/logo';\n\nconst Footer = () => {\n  const intl = useIntl();\n\n  return (\n    <GFooter background=\"dark-1\" pad=\"large\">\n      <Logo color=\"white\" />\n      <Box gap=\"small\">\n        <Anchor\n          icon={<Favorite color=\"neutral-4\" />}\n          color=\"white\"\n          label={intl('footer.madeWithLove')}\n          target=\"_blank\"\n          href=\"https://github.com/apostolidhs/iwantit\"\n        />\n        <Anchor\n          icon={<Info color=\"neutral-3\" />}\n          color=\"white\"\n          label={intl('footer.whatIsThis')}\n          target=\"_blank\"\n          href={`${process.env.PUBLIC_URL}/report.pdf`}\n        />\n      </Box>\n    </GFooter>\n  );\n};\n\nexport default Footer;\n","import React, {Suspense, lazy} from 'react';\nimport {Router} from '@reach/router';\nimport {Main, Box} from 'grommet';\nimport Header from 'organisms/header';\nimport Footer from 'organisms/footer';\nimport {useConfiguration} from 'providers/configuration';\n\nconst Categories = lazy(() => import(/* webpackChunkName: 'page.categories' */ './categories'));\nconst Products = lazy(() => import(/* webpackChunkName: 'page.products' */ './products'));\nconst Product = lazy(() => import(/* webpackChunkName: 'page.product' */ './product'));\nconst NotFound = lazy(() => import(/* webpackChunkName: 'page.notfound' */ './notFound'));\n\nconst Page = () => {\n  const {basepath} = useConfiguration();\n\n  return (\n    <Box height=\"100%\">\n      <Header />\n      <Box as=\"main\" background=\"light-1\" flex=\"grow\">\n        <Suspense fallback={null}>\n          <Router component={Box} align=\"center\" flex=\"grow\" pad=\"medium\" basepath={basepath} data-testid=\"router\">\n            <Categories path=\"/\" />\n            <Products path=\"/category/:id/*\" />\n            <Product path=\"/product/:id/*\" />\n\n            <NotFound default />\n          </Router>\n        </Suspense>\n      </Box>\n      <Footer />\n    </Box>\n  );\n};\n\nexport default Page;\n","import React from 'react';\nimport ConfigurationProvider from 'providers/configuration';\nimport ThemeProvider from 'providers/theme';\nimport LocalizationProvider from 'providers/localization';\nimport NotificationsProvider from 'providers/notifications';\nimport ApiProvider from 'providers/api';\nimport CategoriesProvider from 'providers/categories';\nimport ProductsProvider from 'providers/products';\nimport ProductBuckets from 'providers/productBuckets';\nimport Pages from './pages';\n\nconst App = () => (\n  <ConfigurationProvider>\n    <ThemeProvider>\n      <LocalizationProvider>\n        <NotificationsProvider>\n          <ApiProvider>\n            <CategoriesProvider>\n              <ProductsProvider>\n                <ProductBuckets>\n                  <Pages />\n                </ProductBuckets>\n              </ProductsProvider>\n            </CategoriesProvider>\n          </ApiProvider>\n        </NotificationsProvider>\n      </LocalizationProvider>\n    </ThemeProvider>\n  </ConfigurationProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'}\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import * as actionTypes from './actionTypes';\n\nexport const startFetchResource = id => ({type: actionTypes.startFetchResource, id});\n\nexport const doneFetchResource = (id, payload) => ({type: actionTypes.doneFetchResource, id, payload});\n\nexport const failFetchResource = (id, error) => ({type: actionTypes.failFetchResource, id, error});\n\nexport const startFetch = () => ({type: actionTypes.startFetch});\n\nexport const doneFetch = payload => ({type: actionTypes.doneFetch, payload});\n\nexport const failFetch = () => ({type: actionTypes.failFetch});\n","export default {\n  'pages.notFound': 'Η σελίδα δεν υπάρχει',\n\n  'pages.categories.noResults': 'Προσωρινά δεν έχουμε περιεχόμενο',\n  'pages.categories.notFound': 'Δεν βρέθηκε το προϊόν',\n\n  'pages.products.noResults': 'Δεν βρέθηκαν προϊόντα',\n  'pages.products.noResults.details': 'Δες όλα τα προϊόντα της',\n  'pages.products.noResults.details.link': 'κατηγορίας {title}',\n  'pages.products.notFound': 'Δεν βρέθηκε η κατηγορία',\n  'pages.products.quantity': '{productsCount} προϊόντα',\n\n  'pages.product.related': 'Περισσότερα προϊόντα',\n\n  'footer.madeWithLove': 'Made with love',\n  'footer.whatIsThis': 'What is this',\n\n  'notFound.title': 'Δες όλες τις',\n  'notFound.link': 'κατηγορίες προϊόντων',\n\n  'breadcrumb.landing': 'Αρχική',\n\n  'activeFilter.price.both': '{minValue}  έως {maxValue}',\n  'activeFilter.price.min': 'από {minValue}',\n  'activeFilter.price.max': 'εώς {maxValue}',\n\n  'filters.label': 'φίλτρα',\n  'filters.overlay.submit': 'Προιόντα',\n  'filters.overlay.cancel': 'Ακύρωση',\n  'filters.price.label': 'Τιμή',\n\n  'sorting.desc.label': 'Φθηνότερα',\n  'sorting.desc.title': 'Φθινότερα πρώτα',\n  'sorting.asc.label': 'Ακριβότερα',\n  'sorting.asc.title': 'Ακριβότερα πρώτα',\n\n  'pagination.prev': 'Προηγούμενο',\n  'pagination.next': 'Επόμενο',\n  'pagination.goto': 'Σελίδα {page}',\n\n  'app.close': 'Κλείσιμο',\n\n  'error.connection': 'Η σύνδεση δεν είναι καλή',\n  'error.general': 'Ουπς, συνέβει κάποιο σφάλμα'\n};\n","import React from 'react';\nimport {IntlProvider, useIntl as useNativeIntl} from 'react-intl';\nimport el from './el';\n\nconst Localization = ({children}) => (\n  <IntlProvider locale=\"el\" messages={el}>\n    {children}\n  </IntlProvider>\n);\n\nexport const useIntl = () => {\n  const {formatMessage} = useNativeIntl();\n  return (id, values) => formatMessage({id}, values);\n};\n\nexport default Localization;\n","import {useReducer, useCallback, useRef} from 'react';\n\nexport default (reducer, initialState, extraArgument) => {\n  const [state, reactDispatch] = useReducer(reducer, initialState);\n  const stateRef = useRef();\n  stateRef.current = state;\n\n  const dispatch = useCallback(\n    param =>\n      typeof param === 'function' ? param(stateRef.current, reactDispatch, extraArgument) : reactDispatch(param),\n    []\n  );\n\n  return [state, dispatch];\n};\n","import * as actionTypes from './actionTypes';\nimport getDefaultResourceInitialState from './getResourceInitialState';\n\nexport default (state, action, {getResourceInitialState = getDefaultResourceInitialState} = {}) => {\n  const updateResource = (state, id, dispatch) => ({\n    ...state,\n    ids: [...new Set([...state.ids, id])],\n    byId: {...state.byId, [id]: dispatch({...getResourceInitialState(id), ...state.byId[id]})}\n  });\n\n  const doneFetch = (state, payload) => {\n    const ids = payload.map(({id}) => id.toString());\n    const byId = payload.reduce(\n      (h, resource) => ({...h, [resource.id]: {...getResourceInitialState(resource.id), ...resource}}),\n      state.byId\n    );\n\n    return {...state, loaded: true, loading: false, ids: [...new Set([...state.ids, ...ids])], byId};\n  };\n\n  switch (action.type) {\n    case actionTypes.startFetchResource:\n      return updateResource(state, action.id, resource => ({...resource, loading: true}));\n\n    case actionTypes.doneFetchResource:\n      return updateResource(state, action.id, resource => ({\n        ...resource,\n        loaded: true,\n        loading: false,\n        ...action.payload\n      }));\n\n    case actionTypes.failFetchResource:\n      return updateResource(state, action.id, resource => ({\n        ...resource,\n        exists: action.error.status !== 404,\n        loading: false\n      }));\n\n    case actionTypes.startFetch:\n      return {...state, loading: true};\n\n    case actionTypes.doneFetch:\n      return doneFetch(state, action.payload);\n\n    case actionTypes.failFetch:\n      return {...state, loading: false};\n\n    default:\n      return null;\n  }\n};\n","export default () => ({\n  loaded: false,\n  loading: false,\n  ids: [],\n  byId: {}\n});\n","import {useApi} from 'providers/api';\nimport {useNotification} from 'providers/notifications';\n\nexport default () => {\n  const api = useApi();\n  const notification = useNotification();\n\n  return {api, notification};\n};\n","export default {\n  global: {\n    colors: {brand: '#1a73e8', focus: '#F8F8F8'},\n    font: {\n      family: 'Arial, Helvetica, sans-serif'\n    }\n  }\n};\n","import {createGlobalStyle} from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body, html, #root {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n  }\n\n  :focus {\n    outline: 0;\n  }\n  a {\n    text-decoration: none;\n    text-decoration-color: initial;\n    color: initial;\n  }\n  button:focus {\n    outline:0 !important;\n  }\n`;\n\nexport default GlobalStyle;\n","import React, {useContext, useMemo} from 'react';\nimport {Grommet, ResponsiveContext, ThemeContext} from 'grommet';\nimport theme from './theme';\nimport GlobalStyle from './globalStyle';\n\nconst Theme = ({children}) => (\n  <Grommet theme={theme} style={{height: '100%'}}>\n    <GlobalStyle />\n    {children}\n  </Grommet>\n);\n\nexport const useSize = () => useContext(ResponsiveContext);\n\nexport const useScreenSize = () => {\n  const size = useSize();\n\n  return useMemo(\n    () => ({\n      size,\n      isSmall: size === 'small',\n      isMedium: size === 'medium',\n      isLarge: size === 'large'\n    }),\n    [size]\n  );\n};\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport default Theme;\n","import getResourceInitialState from 'providers/utilities/getResourceInitialState';\n\nexport default id => ({\n  ...getResourceInitialState(id),\n  categoryId: null,\n  title: '',\n  slugPath: '',\n  imageUrl: '',\n  price: 0,\n  excerpt: '',\n  description: ''\n});\n","import {createContext} from 'use-context-selector';\n\nexport const DispatchContext = createContext();\n\nexport default createContext();\n","import React from 'react';\nimport identity from 'lodash/identity';\nimport useReducer from 'hooks/useReducer';\nimport useContextSelector from 'hooks/useContextSelector';\nimport defaultReducer from 'providers/utilities/reducer';\nimport getInitialState from 'providers/utilities/getInitialState';\nimport useExtraArgument from '../useExtraArgument';\nimport getResourceInitialState from './getResourceInitialState';\nimport Context, {DispatchContext} from './context';\n\nconst reducer = (state, action) => {\n  const updatedState = defaultReducer(state, action, {getResourceInitialState});\n  if (updatedState) return updatedState;\n\n  switch (action.type) {\n    default:\n      throw new Error(`unknown action '${action.type}'`);\n  }\n};\n\nconst initialState = getInitialState();\n\nconst Products = ({children}) => {\n  const extraArgument = useExtraArgument();\n  const [state, dispatch] = useReducer(reducer, initialState, extraArgument);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <Context.Provider value={state}>{children}</Context.Provider>\n    </DispatchContext.Provider>\n  );\n};\n\nexport const useProductsSelector = select => useContextSelector(Context, select);\n\nexport const useProductSelector = (id, select = identity) =>\n  useProductsSelector(({byId}) => select(byId[id] || getResourceInitialState(id)));\n\nexport const useProductsDispatch = () => useContextSelector(DispatchContext);\n\nexport default Products;\n","import camelCase from 'lodash/camelCase';\n\nconst toCamelCase = data => {\n  if (Array.isArray(data)) return data.map(value => toCamelCase(value));\n  if (data && typeof data === 'object')\n    return Object.keys(data).reduce((h, key) => ({...h, [camelCase(key)]: toCamelCase(data[key])}), {});\n\n  return data;\n};\n\nexport default toCamelCase;\n","import identity from 'lodash/identity';\nimport toCamelCase from './toCamelCase';\n\nconst getParams = params =>\n  Object.keys(params)\n    .filter(k => params[k] !== undefined)\n    .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n    .join('&');\n\nexport default (href, {params, transform = identity, method = 'GET', headers, ...options} = {}) => {\n  const controller = new AbortController();\n\n  const search = params && getParams(params);\n  const link = search ? `${href}?${search}` : href;\n  const request = fetch(link, {\n    signal: controller.signal,\n    method,\n    headers: {'Content-Type': 'application/json', ...headers},\n    ...options\n  })\n    .catch(error => {\n      error.status = -1;\n      error.statusText = error.name;\n      return error;\n    })\n    .then(response =>\n      response.status === -1\n        ? {response}\n        : response\n            .json()\n            .catch(e => null)\n            .then(data => ({data, response}))\n    )\n    .then(({data, response}) => {\n      const {status, statusText} = response;\n      if (response.ok) return {data: transform(toCamelCase(data)), status, statusText};\n      throw {data, status, statusText};\n    });\n\n  request.abort = () => {\n    controller.abort();\n  };\n\n  return request;\n};\n","import request from 'helpers/request';\n\nconst getNumber = value => (isNaN(value) ? undefined : value);\n\nexport default apiUrl => ({\n  getCategories: props => request(`${apiUrl}/categories`, props),\n  getCategory: (id, props) => request(`${apiUrl}/categories/${id}`, props),\n  getProductsByCategory: (id, {page, sort, order, priceMin, priceMax, limit = 15}, props) =>\n    request(`${apiUrl}/categories/${id}/products`, {\n      params: {\n        page,\n        sort,\n        order: order ? 'asc' : 'desc',\n        min_price: getNumber(priceMin),\n        max_price: getNumber(priceMax),\n        limit\n      },\n      ...props\n    }),\n  getProduct: (id, props) => request(`${apiUrl}/products/${id}`, props)\n});\n","import toCamelCase from 'helpers/request/toCamelCase';\n\nconst makeResponse = response => {\n  console.log('request');\n  return new Promise(r => {\n    setTimeout(() => r({data: toCamelCase(response.default)}), 1);\n  });\n};\n\nexport default () => ({\n  getCategories: () => import('fixtures/categories').then(makeResponse),\n  getCategory: () => import('fixtures/category').then(makeResponse),\n  getProductsByCategory: () => import('fixtures/products').then(makeResponse),\n  getProduct: () => import('fixtures/product').then(makeResponse)\n});\n","import {createContext} from 'use-context-selector';\n\nexport default createContext();\n","import React, {useMemo} from 'react';\nimport useContextSelector from 'hooks/useContextSelector';\nimport {useConfiguration} from 'providers/configuration';\nimport getDispatch from './getDispatch';\nimport getMockDispatch from './getMockDispatch';\nimport Context from './context';\n\nconst Api = ({children}) => {\n  const {apiUrl, mockApi} = useConfiguration();\n  const dispatch = useMemo(() => (mockApi ? getMockDispatch() : getDispatch(apiUrl)), []);\n\n  return <Context.Provider value={dispatch}>{children}</Context.Provider>;\n};\n\nexport const useApi = select => useContextSelector(Context, select || (n => n));\n\nexport default Api;\n","import {createContext} from 'use-context-selector';\n\nexport default createContext();\n","import React from 'react';\nimport styled from 'styled-components';\nimport {Box, Text} from 'grommet';\n\nconst Container = styled(Box)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 10;\n`;\n\nconst Notification = ({type, message}) => (\n  <Container animation=\"fadeIn\">\n    <Box\n      background={type === 'info' ? 'neutral-3' : 'status-warning'}\n      pad={{left: 'medium', vertical: 'small', right: 'medium'}}>\n      <Text color=\"white\" size=\"large\">\n        {message}\n      </Text>\n    </Box>\n  </Container>\n);\n\nexport default Notification;\n","import React, {Fragment, useState, useMemo} from 'react';\nimport useContextSelector from 'hooks/useContextSelector';\nimport {useIntl} from 'providers/localization';\nimport getDispatch from './getDispatch';\nimport Context from './context';\nimport Notification from './notification';\n\nconst Notifications = ({children}) => {\n  const [state, setState] = useState();\n  const intl = useIntl();\n\n  const dispatch = useMemo(() => getDispatch(setState, {intl}), []);\n\n  return (\n    <Fragment>\n      {state && <Notification {...state} />}\n      <Context.Provider value={dispatch}>{children}</Context.Provider>\n    </Fragment>\n  );\n};\n\nexport const useNotification = () => useContextSelector(Context);\n\nexport default Notifications;\n","export default (dispatch, {intl}) => {\n  let timeout = null;\n\n  const clear = () => {\n    clearTimeout(timeout);\n    dispatch(null);\n  };\n\n  const make = type => message => {\n    clear();\n    dispatch({type, message});\n    timeout = setTimeout(clear, 5000);\n  };\n\n  const info = make('info');\n\n  return {\n    info,\n    warning: make('warning'),\n    server: ({status}) => {\n      if (status === 404) return;\n      const message = intl(status === -1 ? 'error.connection' : 'error.general');\n      info(message);\n    }\n  };\n};\n","import React from 'react';\nimport {Link as RouterLink} from '@reach/router';\nimport {useConfiguration} from 'providers/configuration';\n\nconst Link = ({to, children, className, title}) => {\n  const {basepath} = useConfiguration();\n  const routerTo = to[0] === '/' ? `${basepath}${to}` : to;\n\n  return (\n    <RouterLink className={className} title={title} to={routerTo}>\n      {children}\n    </RouterLink>\n  );\n};\n\nexport default Link;\n","import getResourceInitialState from 'providers/utilities/getResourceInitialState';\n\nexport default id => ({\n  ...getResourceInitialState(id),\n  title: '',\n  slug: '',\n  position: 0,\n  imageUrl: '',\n  productsCount: 0,\n  priceMin: 0,\n  priceMax: 0\n});\n","import {createContext} from 'use-context-selector';\n\nexport const DispatchContext = createContext();\n\nexport default createContext();\n","import React, {useEffect} from 'react';\nimport identity from 'lodash/identity';\nimport useReducer from 'hooks/useReducer';\nimport useContextSelector from 'hooks/useContextSelector';\nimport defaultReducer from 'providers/utilities/reducer';\nimport getInitialState from 'providers/utilities/getInitialState';\nimport useExtraArgument from '../useExtraArgument';\nimport * as actions from './actions';\nimport getResourceInitialState from './getResourceInitialState';\nimport Context, {DispatchContext} from './context';\n\nconst reducer = (state, action) => {\n  const updatedState = defaultReducer(state, action, {getResourceInitialState});\n  if (updatedState) return updatedState;\n\n  switch (action.type) {\n    default:\n      throw new Error(`unknown action '${action.type}'`);\n  }\n};\n\nconst initialState = getInitialState();\n\nconst Categories = ({children}) => {\n  const extraArgument = useExtraArgument();\n  const [state, dispatch] = useReducer(reducer, initialState, extraArgument);\n\n  useEffect(() => {\n    actions.fetch()(state, dispatch, extraArgument);\n  }, []);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <Context.Provider value={state}>{children}</Context.Provider>\n    </DispatchContext.Provider>\n  );\n};\n\nexport const useCategoriesSelector = select => useContextSelector(Context, select);\n\nexport const useCategorySelector = (id, select = identity) =>\n  useCategoriesSelector(({byId}) => select(byId[id] || getResourceInitialState(id)));\n\nexport const useCategoryDispatch = () => useContextSelector(DispatchContext);\n\nexport default Categories;\n","export const getBucketId = ({categoryId, page, sort, order, priceMax, priceMin}) =>\n  [categoryId, page, sort, order, priceMax, priceMin].join('-');\n","import getResourceInitialState from 'providers/utilities/getResourceInitialState';\n\nexport default id => ({\n  ...getResourceInitialState(id),\n  ids: []\n});\n","import {createContext} from 'use-context-selector';\n\nexport const DispatchContext = createContext();\n\nexport default createContext();\n","import React from 'react';\nimport identity from 'lodash/identity';\nimport useReducer from 'hooks/useReducer';\nimport useContextSelector from 'hooks/useContextSelector';\nimport defaultReducer from 'providers/utilities/reducer';\nimport getInitialState from 'providers/utilities/getInitialState';\nimport {useProductsDispatch} from 'providers/products';\nimport useExtraArgument from '../useExtraArgument';\nimport getResourceInitialState from './getResourceInitialState';\nimport Context, {DispatchContext} from './context';\nimport {getBucketId} from './helpers';\n\nconst reducer = (state, action) => {\n  const updatedState = defaultReducer(state, action, {getResourceInitialState});\n  if (updatedState) return updatedState;\n\n  switch (action.type) {\n    default:\n      throw new Error(`unknown action '${action.type}'`);\n  }\n};\n\nconst initialState = getInitialState();\n\nconst ProductBucket = ({children}) => {\n  const extraArgument = useExtraArgument();\n  const productsDispatch = useProductsDispatch();\n\n  const [state, dispatch] = useReducer(reducer, initialState, {...extraArgument, productsDispatch});\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <Context.Provider value={state}>{children}</Context.Provider>\n    </DispatchContext.Provider>\n  );\n};\n\nexport const useBucketsSelector = select => useContextSelector(Context, select);\n\nexport const useBucketSelector = (id, select = identity) =>\n  useBucketsSelector(({byId}) => select(byId[id] || getResourceInitialState(id)));\n\nexport const useBucketParamsSelector = (params, select) => useBucketSelector(getBucketId(params), select);\n\nexport const useBucketsDispatch = () => useContextSelector(DispatchContext);\n\nexport default ProductBucket;\n"],"sourceRoot":""}